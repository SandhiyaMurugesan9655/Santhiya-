{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\test\\\\client\\\\src\\\\pages\\\\UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadFile } from '../../services/policyService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError('');\n    setSuccess('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError('Please select a file.');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      await uploadFile(formData);\n      setSuccess('File uploaded successfully!');\n      setFile(null);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Upload failed.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload CSV/XLSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n        onChange: handleFileChange,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: {\n          marginLeft: 8\n        },\n        children: loading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginTop: 8\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green',\n        marginTop: 8\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPage, \"YUyuSYeAJEUXT7OQQ/PB+eWIihQ=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","uploadFile","jsxDEV","_jsxDEV","UploadPage","_s","file","setFile","loading","setLoading","error","setError","success","setSuccess","handleFileChange","e","target","files","handleSubmit","preventDefault","formData","FormData","append","err","_err$response","_err$response$data","response","data","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","disabled","style","marginLeft","color","marginTop","_c","$RefreshReg$"],"sources":["D:/Learning/test/client/src/pages/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { uploadFile } from '../../services/policyService';\r\n\r\nfunction UploadPage() {\r\n    const [file, setFile] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n        setError('');\r\n        setSuccess('');\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) {\r\n            setError('Please select a file.');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        setError('');\r\n        setSuccess('');\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        try {\r\n            await uploadFile(formData);\r\n            setSuccess('File uploaded successfully!');\r\n            setFile(null);\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Upload failed.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Upload CSV/XLSX</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                    onChange={handleFileChange}\r\n                    disabled={loading}\r\n                />\r\n                <button type=\"submit\" disabled={loading} style={{ marginLeft: 8 }}>\r\n                    {loading ? 'Uploading...' : 'Upload'}\r\n                </button>\r\n            </form>\r\n            {error && <div style={{ color: 'red', marginTop: 8 }}>{error}</div>}\r\n            {success && <div style={{ color: 'green', marginTop: 8 }}>{success}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UploadPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}